FROM node:20

WORKDIR /app

# Setup pnpm first
RUN corepack enable

# Install TypeScript globally
RUN npm install -g typescript

# copy only the metadata first to leverage Docker layer cache
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY patches ./patches/
COPY packages/*/package.json ./packages/*/
COPY packages/server/prisma/schema.prisma ./packages/server/prisma/
COPY packages/server/tsconfig.docker.json ./packages/server/

# Install dependencies with no-frozen-lockfile to handle any mismatches
RUN pnpm install --no-frozen-lockfile

# Generate Prisma client
RUN pnpm exec prisma generate --schema=./packages/server/prisma/schema.prisma

# now copy the rest (source code, etc.) AFTER deps are cached
COPY --chown=node:node . .

# build with looser TypeScript constraints for Docker
RUN cd packages/server && rm -rf dist && tsc --project tsconfig.docker.json

# Build server + UI
RUN pnpm --filter server run build
RUN pnpm --filter ui     run build

ENV NODE_ENV=production PORT=3334
EXPOSE 3334
CMD ["pnpm", "--filter", "server", "run", "start:docker"] 