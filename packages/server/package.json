{
  "name": "@oceanview/server",
  "version": "0.0.1",
  "type": "module",
  "prisma": {
    "seed": "tsx ../../scripts/seedAll.ts"
  },
  "scripts": {
    "dev": "tsx watch src/index.ts",
    "dev:no-prisma": "tsx watch src/index.ts",
    "db:generate": "prisma generate",
    "db:seed": "prisma db seed",
    "db:migrate": "prisma migrate deploy",
    "db:apply-migration": "node scripts/apply-migration.js",
    "test": "NODE_OPTIONS=--experimental-vm-modules jest",
    "build": "rm -rf dist && tsc",
    "clean": "find src -name \"*.js\" -type f ! -path \"src/bots/hypertrades/*\" ! -path \"src/db.js\" -delete && echo 'Removed JS duplicates!'",
    "start": "node dist/src/index.js",
    "start:docker": "pnpm exec prisma migrate deploy --schema=./prisma/schema.prisma && pnpm exec prisma db seed --schema=./prisma/schema.prisma && node dist/src/index.js",
    "start:nodb": "node dist/src/index.js",
    "prepare": "if [ \"$CI\" != \"true\" ]; then concurrently \"pnpm run clean\" \"tsc\"; fi",
    "test-multi-asset": "tsx test-multi-asset.ts",
    "run:multi-asset": "node scripts/run-multi-asset.js",
    "cache-manager": "tsx src/scripts/cache_manager.ts",
    "cache-stats": "tsx src/scripts/cache_manager.ts stats",
    "cache-clean": "tsx src/scripts/cache_manager.ts clean",
    "cache-clear": "tsx src/scripts/cache_manager.ts clear",
    "cache-maintenance": "tsx src/scripts/cache_manager.ts maintenance",
    "backtest": "tsx src/scripts/backtest_unified.ts",
    "optimize-risk": "tsx src/scripts/optimize_risk_settings.ts",
    "optimize-risk:apply": "tsx src/scripts/optimize_risk_settings.ts --apply",
    "optimize-strategies": "tsx src/scripts/optimize_strategies.ts",
    "optimize-strategies:apply": "tsx src/scripts/optimize_strategies.ts --apply",
    "optimize-all": "npm run optimize-risk && npm run optimize-strategies",
    "reset-portfolio": "tsx src/scripts/reset_portfolio_state.ts",
    "reset-portfolio:confirm": "tsx src/scripts/reset_portfolio_state.ts --confirm",
    "optimize-all:apply": "npm run optimize-risk:apply && npm run optimize-strategies:apply",
    "backtest-isolated": "tsx src/scripts/backtest_isolated.ts"
  },
  "dependencies": {
    "@fastify/websocket": "^8.2.0",
    "@prisma/client": "^5.22.0",
    "@slack/web-api": "^7.9.2",
    "fastify": "^4.26.0",
    "ioredis": "^5.4.1",
    "node-fetch": "^3.3.2",
    "onnxruntime-node": "1.21.0",
    "pino": "^8.19.0",
    "pino-pretty": "^10.3.1",
    "tsx": "^4.7.0",
    "typescript": "^5.3.3",
    "winston": "^3.17.0",
    "ws": "^8.14.2"
  },
  "devDependencies": {
    "@babel/core": "^7.22.5",
    "@babel/preset-typescript": "^7.22.5",
    "@types/ioredis-mock": "^8.2.6",
    "@types/jest": "^29.5.3",
    "@types/node": "^22.15.29",
    "@types/node-fetch": "^3.0.3",
    "@types/pino": "^7.0.5",
    "@types/winston": "^2.4.4",
    "@types/ws": "^8.18.1",
    "concurrently": "^8.2.0",
    "dotenv": "^16.5.0",
    "ioredis-mock": "^8.9.0",
    "jest": "^29.7.0",
    "prisma": "^5.22.0",
    "ts-jest": "^29.1.1"
  }
}